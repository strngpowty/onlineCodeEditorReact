{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAuDeA,MA5Cf,SAAgBC,GAEZ,IACIC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SAGJ,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OACI,sBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAhD,UACI,sBAAKE,UAAU,eAAf,UACKN,EACD,wBACIO,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,MAHxC,SAKI,cAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,WAGtD,cAAC,aAAD,CACIC,eAjBZ,SAAuBC,EAAQC,EAAMd,GACjCC,EAASD,IAiBDA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMpB,EACNqB,MAAO,WACPC,aAAa,SCrBlBC,MAtBf,SAAyBC,EAAKC,GAE1B,IAAMC,EAJK,eAIkBF,EAE7B,EAA0BpB,oBAAS,WAC/B,IAAMuB,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACFA,IAEAA,KAPb,mBAAOvB,EAAP,KAAc8B,EAAd,KAeE,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAChD,CAACwB,EAAaxB,IAEV,CAACA,EAAO8B,IC0CNI,MA5Df,WAEE,MAAwBb,EAAgB,OAAQ,IAAhD,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAAsBf,EAAgB,MAAM,IAA5C,mBAAOgB,EAAP,KAAYC,EAAZ,KACA,EAAoBjB,EAAgB,KAAM,IAA1C,mBAAOkB,EAAP,KAAWC,EAAX,KACA,EAA4BtC,mBAAS,IAArC,mBAAOuC,EAAP,KAAeC,EAAf,KAkBA,OAhBAX,qBAAW,WACT,IAAMY,EAAUC,YAAY,WAC1BF,EAAU,iCAAD,OAECP,EAFD,mCAGEE,EAHF,qCAIGE,EAJH,sCAOR,KAEH,OAAO,kBAAMM,aAAaF,MAEzB,CAACR,EAAME,EAAKE,IAIb,qCACE,sBAAKlC,UAAU,gBAAf,UACE,cAAC,EAAD,CACEP,SAAS,MACTC,YAAY,OACZC,MAAOmC,EACPlC,SAAUmC,IAEZ,cAAC,EAAD,CACEtC,SAAS,MACTC,YAAY,MACZC,MAAOqC,EACPpC,SAAUqC,IAEZ,cAAC,EAAD,CACExC,SAAS,aACTC,YAAY,aACZC,MAAOuC,EACPtC,SAAUuC,OAGd,qBAAKnC,UAAU,OAAf,SACE,wBACEoC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,e,MCnDjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c659a1a8.chunk.js","sourcesContent":["import 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nfunction Editor(props) {\r\n\r\n    const {\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange\r\n    } = props\r\n\r\n    const [open, setOpen] = useState(true)\r\n\r\n    function handleChange( editor, data, value) {\r\n        onChange(value)\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"expand-collapse-btn\"\r\n                    onClick={() => setOpen(prevOpen => !prevOpen)}\r\n                >\r\n                    <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt}/>\r\n                </button>\r\n            </div>\r\n            <ControlledEditor \r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    theme: 'material',\r\n                    lineNumbers: true\r\n                }}\r\n            \r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Editor;","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'code-editor-'\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n\r\n    const prefixedKey = PREFIX + key\r\n\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n        if (jsonValue != null) return JSON.parse(jsonValue)\r\n    \r\n        if (typeof initialValue === 'function') {\r\n          return initialValue()\r\n        } else {\r\n          return initialValue\r\n        }\r\n      })\r\n    \r\n      useEffect(() => {\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n      }, [prefixedKey, value])\r\n    \r\n      return [value, setValue]\r\n}\r\n\r\nexport default useLocalStorage;","import { useEffect, useState } from \"react\";\nimport Editor from \"./Editor\";\nimport useLocalStorage from \"../hooks/useLocalStorage\"\n\n\nfunction App() {\n\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css','')\n  const [js, setJs] = useLocalStorage('js' ,'')\n  const [srcDoc, setSrcDoc] = useState('')\n\n  useEffect( () => {\n    const timeout = setTimeout( ()=> {\n      setSrcDoc(`\n      <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${js}</script>\n      </html>\n    `)\n    }, 1000)\n\n    return () => clearTimeout(timeout)\n\n  }, [html, css, js])\n \n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor \n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor \n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor \n          language=\"javascript\"\n          displayName=\"JavaScript\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        \n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}